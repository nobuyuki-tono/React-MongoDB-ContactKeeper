{"ast":null,"code":"import _defineProperty from\"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import ContactContext from\"../../context/contact/contactContext\";var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent,updateContact=contactContext.updateContact;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:\"\",email:\"\",phone:\"\",type:\"personal\"});}},[contactContext,current]);var _useState=useState({name:\"\",email:\"\",phone:\"\",type:\"personal\"}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){return setContact(_objectSpread({},contact,_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}clearAll();// setContact({\n//   name: \"\",\n//   email: \"\",\n//   phone: \"\",\n//   type: \"personal\"\n// });\n};var clearAll=function clearAll(){clearCurrent();};return React.createElement(\"form\",{onSubmit:onSubmit},React.createElement(\"h2\",{className:\"text-primary\"},current?\"Edit Contact\":\"Add Contact\"),React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange}),React.createElement(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),React.createElement(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),React.createElement(\"h5\",null,\"Contact Type\"),React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type===\"personal\",onChange:onChange}),\" \",\"Personal\",\" \",React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type===\"professional\",onChange:onChange}),\" \",\"Professional\",React.createElement(\"div\",null,React.createElement(\"input\",{type:\"submit\",value:current?\"Update Contact\":\"Add Contact\",className:\"btn btn-primary btn-block\"})),current&&React.createElement(\"div\",null,React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear\")));};export default ContactForm;","map":{"version":3,"sources":["/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    }\n  }, [contactContext, current]);\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  });\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = e =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n    clearAll();\n    // setContact({\n    //   name: \"\",\n    //   email: \"\",\n    //   phone: \"\",\n    //   type: \"personal\"\n    // });\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className=\"text-primary\">\n        {current ? \"Edit Contact\" : \"Add Contact\"}\n      </h2>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        name=\"name\"\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Phone\"\n        name=\"phone\"\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"personal\"\n        checked={type === \"personal\"}\n        onChange={onChange}\n      />{\" \"}\n      Personal{\" \"}\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"professional\"\n        checked={type === \"professional\"}\n        onChange={onChange}\n      />{\" \"}\n      Professional\n      <div>\n        <input\n          type=\"submit\"\n          value={current ? \"Update Contact\" : \"Add Contact\"}\n          className=\"btn btn-primary btn-block\"\n        />\n      </div>\n      {current && (\n        <div>\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}