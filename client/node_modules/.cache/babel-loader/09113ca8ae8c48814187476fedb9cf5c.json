{"ast":null,"code":"import _toConsumableArray from\"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_CONTACTS,ADD_CONTACT,DELETE_CONTACT,CLEAR_CONTACTS,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR}from\"../types\";export default(function(state,action){switch(action.type){case GET_CONTACTS:return _objectSpread({},state,{contacts:action.payload,loading:false});case ADD_CONTACT:return _objectSpread({},state,{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false});case UPDATE_CONTACT:return _objectSpread({},state,{contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false});case DELETE_CONTACT:return _objectSpread({},state,{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;}),loading:false});case CLEAR_CONTACTS:return _objectSpread({},state,{contacts:null,filtered:null,error:null,current:null});case SET_CURRENT:return _objectSpread({},state,{current:action.payload});case CLEAR_CURRENT:return _objectSpread({},state,{current:null});case FILTER_CONTACTS:return _objectSpread({},state,{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),\"gi\");return contact.name.match(regex)||contact.email.match(regex);})});case CLEAR_FILTER:return _objectSpread({},state,{filtered:null});case CONTACT_ERROR:return _objectSpread({},state,{error:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","CLEAR_CONTACTS","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","loading","map","contact","_id","filter","filtered","error","current","regex","RegExp","name","match","email"],"mappings":"uUAAA,OACEA,YADF,CAEEC,WAFF,CAGEC,cAHF,CAIEC,cAJF,CAKEC,WALF,CAMEC,aANF,CAOEC,cAPF,CAQEC,eARF,CASEC,YATF,CAUEC,aAVF,KAWO,UAXP,CAaA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKZ,CAAAA,YAAL,CACE,wBACKU,KADL,EAEEG,QAAQ,CAAEF,MAAM,CAACG,OAFnB,CAGEC,OAAO,CAAE,KAHX,GAMF,IAAKd,CAAAA,WAAL,CACE,wBACKS,KADL,EAEEG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFV,CAGEE,OAAO,CAAE,KAHX,GAMF,IAAKT,CAAAA,cAAL,CACE,wBACKI,KADL,EAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmB,SAAAC,OAAO,QAClCA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OADpB,EAA1B,CAFZ,CAKEF,OAAO,CAAE,KALX,GAQF,IAAKb,CAAAA,cAAL,CACE,wBACKQ,KADL,EAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CACR,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAA3B,EADC,CAFZ,CAKEC,OAAO,CAAE,KALX,GAOF,IAAKZ,CAAAA,cAAL,CACE,wBACKO,KADL,EAEEG,QAAQ,CAAE,IAFZ,CAGEO,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,IAJT,CAKEC,OAAO,CAAE,IALX,GAOF,IAAKlB,CAAAA,WAAL,CACE,wBACKM,KADL,EAEEY,OAAO,CAAEX,MAAM,CAACG,OAFlB,GAIF,IAAKT,CAAAA,aAAL,CACE,wBACKK,KADL,EAEEY,OAAO,CAAE,IAFX,GAKF,IAAKf,CAAAA,eAAL,CACE,wBACKG,KADL,EAEEU,QAAQ,CAAEV,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsB,SAAAF,OAAO,CAAI,CACzC,GAAMM,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACD,CAHS,CAFZ,GAOF,IAAKf,CAAAA,YAAL,CACE,wBACKE,KADL,EAEEU,QAAQ,CAAE,IAFZ,GAIF,IAAKX,CAAAA,aAAL,CACE,wBACKC,KADL,EAEEW,KAAK,CAAEV,MAAM,CAACG,OAFhB,GAIF,QACE,MAAOJ,CAAAA,KAAP,CAtEJ,CAwED,CAzED","sourcesContent":["import {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  CLEAR_CONTACTS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false\n      };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact._id === action.payload._id ? action.payload : contact\n        ),\n        loading: false\n      };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact._id !== action.payload\n        ),\n        loading: false\n      };\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}