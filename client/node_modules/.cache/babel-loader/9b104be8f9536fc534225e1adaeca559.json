{"ast":null,"code":"import _objectSpread from \"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from \"../types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, action.payload]\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","map","contact","id","filter","current","filtered","regex","RegExp","name","match","email","error"],"mappings":";AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,QASO,UATP;AAWA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFZ;;AAKF,SAAKR,cAAL;AACE,+BACKI,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,GAAf,CAAmBC,OAAO,IAClCA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GAAmCN,MAAM,CAACG,OAA1C,GAAoDE,OAD5C;AAFZ;;AAOF,SAAKb,cAAL;AACE,+BACKO,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeK,MAAf,CACRF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OADzB;AAFZ;;AAOF,SAAKV,WAAL;AACE,+BACKM,KADL;AAEES,QAAAA,OAAO,EAAER,MAAM,CAACG;AAFlB;;AAIF,SAAKT,aAAL;AACE,+BACKK,KADL;AAEES,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAKZ,eAAL;AACE,+BACKG,KADL;AAEEU,QAAAA,QAAQ,EAAEV,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAsBF,OAAO,IAAI;AACzC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEX,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFZ;;AAOF,SAAKb,YAAL;AACE,+BACKE,KADL;AAEEU,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAKX,aAAL;AACE,+BACKC,KADL;AAEEgB,QAAAA,KAAK,EAAEf,MAAM,CAACG;AAFhB;;AAIF;AACE,aAAOJ,KAAP;AArDJ;AAuDD,CAxDD","sourcesContent":["import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? action.payload : contact\n        )\n      };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}