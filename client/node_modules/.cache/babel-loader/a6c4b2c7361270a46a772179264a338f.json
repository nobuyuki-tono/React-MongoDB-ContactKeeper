{"ast":null,"code":"var _jsxFileName = \"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/src/components/contacts/ContactFilter.js\";\nimport React, { useContext, useRef, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const text = useRef(\"\");\n  const filterContact = contactContext.filterContact,\n        clearFilter = contactContext.clearFilter,\n        filtered = contactContext.filtered;\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = \"\";\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== \"\") {\n      filterContact(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: text,\n    type: \"text\",\n    placeholder: \"Filter Contacts...\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default ContactFilter;","map":{"version":3,"sources":["/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","text","filterContact","clearFilter","filtered","current","value","onChange","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,cAAc,GAAGL,UAAU,CAACG,cAAD,CAAjC;AACA,QAAMG,IAAI,GAAGL,MAAM,CAAC,EAAD,CAAnB;AAF0B,QAGlBM,aAHkB,GAGuBF,cAHvB,CAGlBE,aAHkB;AAAA,QAGHC,WAHG,GAGuBH,cAHvB,CAGHG,WAHG;AAAA,QAGUC,QAHV,GAGuBJ,cAHvB,CAGUI,QAHV;AAK1BP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAQ,KAAK,IAAjB,EAAuB;AACrBH,MAAAA,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,GAJQ,CAAT;;AAMA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,QAAIP,IAAI,CAACI,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BJ,MAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAb;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW;AACZ;AACF,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEF,IADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,oBAHd;AAIE,IAAA,QAAQ,EAAEM,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CA7BD;;AA+BA,eAAeR,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const text = useRef(\"\");\n  const { filterContact, clearFilter, filtered } = contactContext;\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = \"\";\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== \"\") {\n      filterContact(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <form>\n      <input\n        ref={text}\n        type=\"text\"\n        placeholder=\"Filter Contacts...\"\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nexport default ContactFilter;\n"]},"metadata":{},"sourceType":"module"}