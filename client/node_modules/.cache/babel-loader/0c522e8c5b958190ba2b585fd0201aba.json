{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from\"react\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import ContactItem from\"./ContactItem\";import ContactContext from\"../../context/contact/contactContext\";import Spinner from\"../layout/Spinner\";var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();// eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return React.createElement(\"h4\",null,\"Please add a contact\");}return React.createElement(Fragment,null,contacts!==null&&!loading?React.createElement(TransitionGroup,null,filtered!==null?filtered.map(function(contact){return React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},React.createElement(ContactItem,{contact:contact}));}):contacts.map(function(contact){return React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},React.createElement(ContactItem,{contact:contact}));})):React.createElement(Spinner,null));};export default Contacts;","map":{"version":3,"sources":["/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,cAAc,CAAGR,UAAU,CAACK,cAAD,CAAjC,CADqB,GAGbI,CAAAA,QAHa,CAGgCD,cAHhC,CAGbC,QAHa,CAGHC,QAHG,CAGgCF,cAHhC,CAGHE,QAHG,CAGOC,WAHP,CAGgCH,cAHhC,CAGOG,WAHP,CAGoBC,OAHpB,CAGgCJ,cAHhC,CAGoBI,OAHpB,CAKrBX,SAAS,CAAC,UAAM,CACdU,WAAW,GACX;AACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAIF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAnD,CAA4D,CAC1D,MAAO,sDAAP,CACD,CAED,MACE,qBAAC,QAAD,MACGH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,CACC,oBAAC,eAAD,MACGF,QAAQ,GAAK,IAAb,CACGA,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,QAClB,qBAAC,aAAD,EACE,GAAG,CAAEA,OAAO,CAACC,GADf,CAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAC,MAHb,EAKE,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EALF,CADkB,EAApB,CADH,CAUGN,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,QAClB,qBAAC,aAAD,EACE,GAAG,CAAEA,OAAO,CAACC,GADf,CAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAC,MAHb,EAKE,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EALF,CADkB,EAApB,CAXN,CADD,CAuBC,oBAAC,OAAD,MAxBJ,CADF,CA6BD,CA3CD,CA6CA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered, getContacts, loading } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup>\n          {filtered !== null\n            ? filtered.map(contact => (\n                <CSSTransition\n                  key={contact._id}\n                  timeout={500}\n                  classNames=\"item\"\n                >\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))\n            : contacts.map(contact => (\n                <CSSTransition\n                  key={contact._id}\n                  timeout={500}\n                  classNames=\"item\"\n                >\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}