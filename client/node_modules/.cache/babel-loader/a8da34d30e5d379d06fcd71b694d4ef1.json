{"ast":null,"code":"import _regeneratorRuntime from\"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from\"react\";import axios from\"axios\";import ContactContext from\"./contactContext\";import contactReducer from\"./contactReducer\";import{GET_CONTACTS,ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_CONTACTS,CLEAR_FILTER,CONTACT_ERROR}from\"../types\";var ContactState=function ContactState(props){var initialState={contacts:null,current:null,filtered:null,error:null};var _useReducer=useReducer(contactReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Get Contacts\nvar getContacts=function getContacts(){var res;return _regeneratorRuntime.async(function getContacts$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(axios.get(\"/api/contacts\"));case 3:res=_context.sent;dispatch({type:GET_CONTACTS,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:CONTACT_ERROR,payload:_context.t0.response.msg});case 10:case\"end\":return _context.stop();}}},null,null,[[0,7]]);};// Add Contact\nvar addContact=function addContact(contact){var config,res;return _regeneratorRuntime.async(function addContact$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{\"Content-Type\":\"application/json\"}};_context2.prev=1;_context2.next=4;return _regeneratorRuntime.awrap(axios.post(\"/api/contacts\",contact,config));case 4:res=_context2.sent;dispatch({type:ADD_CONTACT,payload:res.data});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch({type:CONTACT_ERROR,payload:_context2.t0.response.msg});case 11:case\"end\":return _context2.stop();}}},null,null,[[1,8]]);};// Delete Contact\nvar deleteContact=function deleteContact(id){return _regeneratorRuntime.async(function deleteContact$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return _regeneratorRuntime.awrap(axios.delete(\"/api/contacts/\".concat(id)));case 3:dispatch({type:DELETE_CONTACT,payload:id});_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);dispatch({type:CONTACT_ERROR,payload:_context3.t0.response.msg});case 9:case\"end\":return _context3.stop();}}},null,null,[[0,6]]);};// Update contact\nvar updateContact=function updateContact(contact){var config,res;return _regeneratorRuntime.async(function updateContact$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:config={headers:{\"Content-Type\":\"application/json\"}};_context4.prev=1;_context4.next=4;return _regeneratorRuntime.awrap(axios.put(\"/api/contacts/\".concat(contact._id),contact,config));case 4:res=_context4.sent;dispatch({type:UPDATE_CONTACT,payload:res.data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](1);dispatch({type:CONTACT_ERROR,payload:_context4.t0.response.msg});case 11:case\"end\":return _context4.stop();}}},null,null,[[1,8]]);};// Clear Contacts\nvar clearContacts=function clearContacts(){dispatch({type:CLEAR_CONTACTS});};// Set current contact\nvar setCurrent=function setCurrent(contact){dispatch({type:SET_CURRENT,payload:contact});};// Clear current contact\nvar clearCurrent=function clearCurrent(){dispatch({type:CLEAR_CURRENT});};// Filter Contacts\nvar filterContact=function filterContact(text){dispatch({type:FILTER_CONTACTS,payload:text});};// Clear Filter\nvar clearFilter=function clearFilter(){dispatch({type:CLEAR_FILTER});};return React.createElement(ContactContext.Provider,{value:{contacts:state.contacts,current:state.current,filtered:state.filtered,error:state.error,getContacts:getContacts,addContact:addContact,deleteContact:deleteContact,clearContacts:clearContacts,setCurrent:setCurrent,clearCurrent:clearCurrent,updateContact:updateContact,filterContact:filterContact,clearFilter:clearFilter}},props.children);};export default ContactState;","map":{"version":3,"sources":["/Users/NobuyukiTono/Documents/Udemy/traversy-media/REACT/contactKeeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","get","res","type","payload","data","response","msg","addContact","contact","config","headers","post","deleteContact","id","delete","updateContact","put","_id","clearContacts","setCurrent","clearCurrent","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\n\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n\n      dispatch({ type: GET_CONTACTS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n  };\n\n  // Add Contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n\n      dispatch({ type: DELETE_CONTACT, payload: id });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n  };\n\n  // Update contact\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(\n        `/api/contacts/${contact._id}`,\n        contact,\n        config\n      );\n\n      dispatch({ type: UPDATE_CONTACT, payload: res.data });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n  };\n\n  // Clear Contacts\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  // Set current contact\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear current contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Contacts\n  const filterContact = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        getContacts,\n        addContact,\n        deleteContact,\n        clearContacts,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContact,\n        clearFilter\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}